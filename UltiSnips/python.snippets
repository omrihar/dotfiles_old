snippet ass "A general assert statement"
assert isinstance(${1:var}, ${2:(int, long)}) ${3:and}
$0
endsnippet

snippet assi "Asserts that the variable is an integer"
assert isinstance(${1:var}, (int, long)) $0
endsnippet

snippet assip "Asserts that the variable is a positive integer"
assert isinstance(${1:var}, (int, long)) and $1 > 0 $0
endsnippet

snippet doco "Documentation with my name in it for scientific publications"
'''
${1:file.py} (v0.1)

Written by:
    Omri Har-Shemesh, Computational Science Lab, University of Amsterdam
    O.HarShemesh@uva.nl

Last updated on $2

Description:
    $3

References:
    $4

Functions:
    $5

Dependencies:
    $6

License:
    The MIT License (MIT)

    Copyright (c) 2015 Omri Har-Shemesh

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.

'''
$0
endsnippet

snippet com "A cool comment with underline used as separator"
# ${1:Comment}
# `!p snip.rv += "-" * len(t[1])`
$0
endsnippet

snippet imps "My standard cool imports"
from __future__ import print_function, division

# Standard imports
import numpy as np
import scipy as sp
import matplotlib.pyplot as plt
import cPickle as pickle
import time

import os
import sys

$0
endsnippet

snippet gtk_win "Create a standard GTK+3 window and connect it to delete event"
${1:win} = Gtk.Window()

$1.connect("delete-event", Gtk.main_quit)
$1.show_all()
Gtk.main()
endsnippet

